version: 2

references:
  workspace_root: &workspace_root
    /tmp/workspace
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root

jobs:
  build_ubuntu16:
    docker:
      - image: sgpearse/vapor3-ubuntu16:latest

    steps:
      - checkout

      - run:
          name: cmake and make
          command: |
            cd /VAPOR
            git pull
            cd build
            cmake ..
            make &> /tmp/output.txt

      - store_artifacts:
          path: /tmp/output.txt

      - run:
          name: check for warnings
          command: |
            if grep -q warning /tmp/output.txt; then
               exit 1
            else
               exit 0
            fi

  build_ubuntu18:
    docker:
      - image: sgpearse/vapor3-ubuntu18:latest

    steps:
      - checkout

      - run:
          name: cmake and make
          command: |
            cd /VAPOR
            git pull
            cd build
            cmake ..
            make &> /tmp/output.txt

      - store_artifacts:
          path: /tmp/output.txt

      - run:
          name: check for warnings
          command: |
            if grep -q warning /tmp/output.txt; then
               exit -1
            else
               exit 0
            fi

  build_ubuntu18_installer:
    docker:
      - image: sgpearse/vapor3-ubuntu18:latest
    #working_directory: /tmp

    steps:
      - checkout

      - run:
          name: make installer
          command: |
            cd /VAPOR/build
            cmake -DCMAKE_BUILD_TYPE:String=Release -DDIST_INSTALLER:string=ON ..
            make
            make installer
            mkdir -p /tmp/workspace/installers
            mv *.sh /tmp/workspace/installers

      - persist_to_workspace:
          root: *workspace_root
          paths: 
            - installers

  build_centos7:
    docker:
      - image: sgpearse/vapor3-centos7:latest

    steps:
      - checkout

      - run:
          name: cmake3 and make
          command: |
            ls -lrth /usr/local/VAPOR-Deps
            cd /VAPOR
            git pull
            cd build
            cmake3 ..
            make &> /tmp/output.txt

      - store_artifacts:
          path: /tmp/output.txt

      - run:
          name: check for warnings
          command: |
            if grep -q warning /tmp/output.txt; then
               exit 1
            else
               exit 0
            fi

  build_osx:
    macos:
      xcode: "11.1.0"
    steps:
      - run:
          name: Get 3rd party libs
          command: |
            pip3 install gdown
            sudo mkdir -p /usr/local/VAPOR-Deps
            sudo chmod 777 /usr/local/VAPOR-Deps
            cd /usr/local/VAPOR-Deps
            gdown https://drive.google.com/uc?id=1kyDAzmK9zShrIcoAbned8YW9vn2j7lpe
      - run:
          name: Extract 3rd party libs
          command: |
            cd /usr/local/VAPOR-Deps
            tar xf 2019-Aug-Darwin.tar.xz -C /usr/local/VAPOR-Deps
            ls /usr/local/VAPOR-Deps
      - checkout
      - run:
          name: Install cmake
          command: |
            brew install cmake
      - run:
          name: make VAPOR
          command: |
            cp site_files/site.NCAR site.local
            mkdir build
            cd build
            cmake ..
            make &> /tmp/output.txt

      - store_artifacts:
          path: /tmp/output.txt

      - run:
          name: check for warnings
          command: |
            if grep -q warning /tmp/output.txt; then
               exit 1
            else
               exit 0
            fi

  release_on_github:
    macos:
      xcode: "11.1.0"
    steps:
      - *attach_workspace
      - run:
          name: list workspace
          command: ls /tmp/workspace
      - run:
          name: install ghr
          command: |
            brew install ghr
      - run:
          name: push assets with ghr
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete Nightly /tmp/workspace/installers



workflows:
  version: 2
  build:
    jobs:
      #- build_ubuntu18
      - build_ubuntu18_installer
      - release_on_github:
          requires:
            - build_ubuntu18_installer
      #- build_ubuntu16
      #- build_centos7
      #- build_osx

#  nightly:
#    triggers:
#      - schedule:
#           cron: "0 0 * * *" #nightly cron job
#           filters:
#             branches:
#               only:
#                 - master
#    jobs:
#      - build_ubuntu18_installer:
#      - release_on_github:
#          requires:
#            - build_ubuntu18_installer
